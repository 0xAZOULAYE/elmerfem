MACRO(ADD_ELMERICE_TEST test_name)
  ADD_TEST(NAME ${test_name}
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    COMMAND ${CMAKE_COMMAND}
      -DELMERGRID_BIN=${ELMERGRID_BIN}
      -DELMERSOLVER_BIN=${ELMERSOLVER_BIN}
      -DTEST_SOURCE=${CMAKE_CURRENT_SOURCE_DIR}
      -DPROJECT_SOURCE_DIR=${PROJECT_SOURCE_DIR}
      -DBINARY_DIR=${CMAKE_BINARY_DIR}
      -DCMAKE_Fortran_COMPILER=${CMAKE_Fortran_COMPILER}
      -P ${CMAKE_CURRENT_SOURCE_DIR}/runTest.cmake)
ENDMACRO()

MACRO(ADD_ELMERICETEST_MODULE test_name module_name file_name)
  IF(APPLE)
    SET(CMAKE_SHARED_MODULE_SUFFIX ".dylib")
  ENDIF(APPLE)
  SET(ELMERICETEST_CMAKE_NAME "${test_name}_${module_name}")
  ADD_LIBRARY(${ELMERICETEST_CMAKE_NAME} MODULE ${file_name})
  SET_TARGET_PROPERTIES(${ELMERICETEST_CMAKE_NAME}
    PROPERTIES PREFIX "")
  TARGET_LINK_LIBRARIES(${ELMERICETEST_CMAKE_NAME}
    elmersolver)
  SET_TARGET_PROPERTIES(${ELMERICETEST_CMAKE_NAME}
    PROPERTIES OUTPUT_NAME ${module_name} LINKER_LANGUAGE Fortran)
  TARGET_LINK_LIBRARIES(${ELMERICETEST_CMAKE_NAME} elmersolver)
  IF(WITH_MPI)
    ADD_DEPENDENCIES(${ELMERICETEST_CMAKE_NAME} 
      elmersolver ElmerSolver_mpi ElmerGrid)
  ELSE()
    ADD_DEPENDENCIES(${ELMERICETEST_CMAKE_NAME} 
      elmersolver ElmerSolver ElmerGrid)
  ENDIF()
  UNSET(ELMERICETEST_CMAKE_NAME)
ENDMACRO()

MACRO(RUN_ELMERICE_TEST)
  MESSAGE(STATUS "BINARY_DIR = ${BINARY_DIR}")
  FILE(REMOVE TEST.PASSED)
  SET(extra_macro_args ${ARGN})
  # optional args? For mpi run command
  LIST(LENGTH extra_macro_args num_extra_args)
  MESSAGE( "${extra_macro_args} ${num_extra_args}")
  IF(${num_extra_args} GREATER 0)
    LIST(GET extra_macro_args 0 optional_arg)
    MESSAGE("Got an optional arg: ${optional_arg}")
    SET(test_parameters -np ${optional_arg} )
    EXECUTE_PROCESS(COMMAND "mpirun" ${test_parameters} ${ELMERSOLVER_BIN} OUTPUT_FILE "test-stdout.log"
        ERROR_FILE "test-stderr.log" OUTPUT_VARIABLE TESTOUTPUT)
  ELSE()
    EXECUTE_PROCESS(COMMAND ${ELMERSOLVER_BIN} OUTPUT_FILE "test-stdout.log"
      ERROR_FILE "test-stderr.log" OUTPUT_VARIABLE TESTOUTPUT)
  ENDIF(${num_extra_args} GREATER 0)

  MESSAGE(STATUS "testoutput.........: ${TESTOUTPUT}")

  FILE(READ "TEST.PASSED" RES)
  IF(NOT RES EQUAL "1")
    MESSAGE(FATAL_ERROR "Test failed")
  ENDIF()
ENDMACRO()

MACRO(EXECUTE_ELMER_SOLVER SIFNAME)
  SET(ENV{ELMER_HOME} "${BINARY_DIR}/fem/src")
  SET(ENV{ELMER_LIB} "${BINARY_DIR}/fem/src/modules")
  EXECUTE_PROCESS(COMMAND ${ELMERSOLVER_BIN} ${SIFNAME} OUTPUT_FILE "${SIFNAME}-stdout.log"
    ERROR_FILE "${SIFNAME}-stderr.log")
ENDMACRO()
