ELMERF90=elmerf90
ELMERLD=elmerld

SRC=LocalTypes.F90 ElementBasisFunctions.F90 PoissonOMPBLAS.F90
OBJS=$(patsubst %.F90, %.o, $(SRC))
# OBJS=$(patsubst %.o, %.so, $(_OBJS))

.SECONDARY: $(_OBJS) $(OBJS)
default: PoissonOMPBLAS.so

ElementBasisFunctions.o: LocalTypes.o
PoissonOMPBLAS.o: LocalTypes.o ElementBasisFunctions.o 

# Solver testing vectorization improvements

PoissonOMPBLAS.so: PoissonOMPBLAS.o ElementBasisFunctions.o LocalTypes.o
	$(ELMERLD) -o $@ $^

# Solver testing and timing of mesh colouring

LocalTypes.o: LocalTypes.F90
	$(ELMERF90) -DHAVE_TIMING -c $< -o $@

MeshColour.o: MeshColour.F90 LocalTypes.o
	$(ELMERF90) -DHAVE_TIMING -DHAVE_METIS -c $< -o $@
#	$(ELMERF90) -DHAVE_TIMING -DHAVE_METIS -fbounds-check -fbacktrace -c $< -o $@

MeshColour.so: MeshColour.o LocalTypes.o
	$(ELMERLD) -L$(METIS_ROOT)/lib -o $@ $^ -lmetis

%.o: %.F90
	$(ELMERF90) -c $< -o $@
#	$(ELMERF90) -fbounds-check -fbacktrace -c $< -o $@

%.so: %.o
	$(ELMERLD) -o $@ $<    

all: $(OBJS)

listtest: $(OBJS)
	$(ELMERF90) -c ListTest.F90 -o ListTest.o
	$(ELMERLD) LocalTypes.o ListTest.o -o ListTest.so
	gfortran ListTest.so -o ListTest 

settest: $(OBJS)
	$(ELMERF90) -c SetTest.F90 -o SetTest.o
	$(ELMERLD) LocalTypes.o SetTest.o -o SetTest.so
	gfortran SetTest.so -o SetTest 

clean:
	rm -f *.so *.o
